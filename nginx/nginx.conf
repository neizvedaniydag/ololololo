# Конфигурация Nginx

# Перенаправляем весь HTTP трафик на HTTPS
server {
    listen 80;
    server_name ваш_домен.ru www.ваш_домен.ru;
    return 301 https://$host$request_uri;
}

# Основная конфигурация для HTTPS
server {
    listen 443 ssl;
    server_name ваш_домен.ru www.ваш_домен.ru;

    # ===============================================================
    # ВАЖНО: Укажите пути к вашим SSL сертификатам.
    # В Timeweb их можно найти в панели управления.
    # Эти файлы нужно будет скопировать в папку /etc/nginx/ssl/
    # внутри Docker-контейнера Nginx.
    # ===============================================================
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # Настройки SSL для повышения безопасности
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_prefer_server_ciphers off;

    # Обработка статических файлов
    # Nginx отдает их напрямую, не нагружая Python-приложение
    location /static {
        # Путь к статике внутри контейнера Nginx
        alias /app/static;
        expires 7d; # Кэшируем на 7 дней
    }

    # Все остальные запросы передаем нашему Flask-приложению (Gunicorn)
    location / {
        proxy_pass http://web:5000; # 'web' - это имя нашего Flask-сервиса в docker-compose
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
